{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","IndexPage","_ref","data","a","createElement","title","keywords","allMarkdownRemark","edges","map","_ref2","node","key","id","to","fields","slug","frontmatter","date","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","siteSubtitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","fontStyle","Layout","Fragment","header","paddingTop","href","target","rel","_3986049164"],"mappings":"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","file":"component---src-pages-index-js-2334aadf15c3c1092330.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Home\" keywords={[`ian-zy`, `developer`, `blogs`]} />\n      <div>\n        <h2>Blog Posts</h2>\n        <ul>\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <li key={node.id}>\n              <Link to={node.fields.slug}>\n                {node.frontmatter.title} - {node.fields.date}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <Link to=\"/app/\">Check out my awesome dynamic app!</Link>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(filter: { fields: { category: { eq: \"blog\" } } }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle, siteSubtitle }) => (\n  <div\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <h4\n        style={{\n          margin: 0,\n          color: `#aaa`,\n          fontStyle: `italic`,\n        }}\n      >\n        {siteSubtitle}\n      </h4>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} siteSubtitle={data.site.siteMetadata.description} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            © 2018, <a href=\"https://github.com/ian-zy\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none' }}>{data.site.siteMetadata.author}</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}